import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }


}

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}
group 'me.realized'
version '3.2.8'

repositories {
    mavenCentral()

    maven {
        name 'spigot-repo'
        url 'https://hub.spigotmc.org/nexus/content/repositories/public'
    }

    maven {
        name 'bungeecord-repo'
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name 'clip-repo'
        url 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name 'codemc-repo'
        url 'https://repo.codemc.io/repository/maven-public/'
    }
    maven {
        name 'inventive-repo'
        url 'https://repo.inventivetalent.org/content/groups/public/'
    }
    flatDir {
        dirs "$rootDir/libs/"
    }
}


dependencies {

    implementation 'org.spigotmc:spigot-api:1.14.4-R0.1-SNAPSHOT'
    implementation name: 'MVdWPlaceholderAPI-3.1.1', transitive: false
    implementation name: 'Vault-1.6.7'
    implementation 'me.clip:placeholderapi:2.10.9'
    // shaded dependencies
    implementation 'redis.clients:jedis:3.5.1'
    implementation 'org.apache.commons:commons-pool2:2.4.2'
    implementation 'com.zaxxer:HikariCP:4.0.2'
    implementation 'org.slf4j:slf4j-nop:1.7.32'
    implementation 'org.bstats:bstats-bukkit:1.7'
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
}

tasks.compileJava {
    options.encoding = 'UTF-8'
}

processResources {
    duplicatesStrategy = 'exclude'
    def group = project.group.toString() + "." + project.name.toLowerCase() + ".shaded"

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter(ReplaceTokens, tokens: [NAME: project.name, VERSION: project.version, SHADED_GROUP: group])
    }
}

tasks.clean {
    doFirst {
        delete "$rootDir/out/"
    }
}

tasks.shadowJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    destinationDirectory = file("$rootDir/out/")
    archiveBaseName.set('TokenManager')
    archiveClassifier.set('')

    dependencies {
        include(dependency('redis.clients:.*'))
        include(dependency('org.apache.commons:.*'))
        include(dependency('com.zaxxer:.*'))
        include(dependency('org.slf4j:.*'))
        include(dependency('org.bstats:.*'))
    }

    def shadedGroup = "${project.group}.${project.name.toLowerCase()}.shaded."
    relocate 'redis.clients', shadedGroup + 'redis.clients'
    relocate 'org.apache.commons.pool2', shadedGroup + 'apache.commons.pool2'
    relocate 'com.zaxxer.hikari', shadedGroup + 'zaxxer.hikari'
    relocate 'org.slf4j', shadedGroup + 'slf4j'
    relocate 'org.bstats', shadedGroup + 'bstats'
}

tasks.build {
    dependsOn(tasks.shadowJar)
}